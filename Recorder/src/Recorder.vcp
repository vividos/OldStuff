# Microsoft eMbedded Visual Tools Project File - Name="Recorder" - Package Owner=<4>
# Microsoft eMbedded Visual Tools Generated Build File, Format Version 6.02
# ** DO NOT EDIT **

# TARGTYPE "Win32 (WCE ARMV4) Application" 0xa301

CFG=Recorder - Win32 (WCE ARMV4) Debug
!MESSAGE This is not a valid makefile. To build this project using NMAKE,
!MESSAGE use the Export Makefile command and run
!MESSAGE 
!MESSAGE NMAKE /f "Recorder.vcn".
!MESSAGE 
!MESSAGE You can specify a configuration when running NMAKE
!MESSAGE by defining the macro CFG on the command line. For example:
!MESSAGE 
!MESSAGE NMAKE /f "Recorder.vcn" CFG="Recorder - Win32 (WCE ARMV4) Debug"
!MESSAGE 
!MESSAGE Possible choices for configuration are:
!MESSAGE 
!MESSAGE "Recorder - Win32 (WCE ARMV4) Release" (based on "Win32 (WCE ARMV4) Application")
!MESSAGE "Recorder - Win32 (WCE ARMV4) Debug" (based on "Win32 (WCE ARMV4) Application")
!MESSAGE 

# Begin Project
# PROP AllowPerConfigDependencies 0
# PROP Scc_ProjName ""
# PROP Scc_LocalPath ""
# PROP ATL_Project 2
CPP=clarm.exe
MTL=midl.exe
RSC=rc.exe

!IF  "$(CFG)" == "Recorder - Win32 (WCE ARMV4) Release"

# PROP BASE Use_MFC 0
# PROP BASE Use_Debug_Libraries 0
# PROP BASE Output_Dir "ARMV4Rel"
# PROP BASE Intermediate_Dir "ARMV4Rel"
# PROP BASE CPU_ID "{ECBEA43D-CD7B-4852-AD55-D4227B5D624B}"
# PROP BASE Platform_ID "{8A9A2F80-6887-11D3-842E-005004848CBA}"
# PROP BASE Target_Dir ""
# PROP Use_MFC 0
# PROP Use_Debug_Libraries 0
# PROP Output_Dir "ARMV4Rel"
# PROP Intermediate_Dir "ARMV4Rel\intermediate"
# PROP CPU_ID "{ECBEA43D-CD7B-4852-AD55-D4227B5D624B}"
# PROP Platform_ID "{8A9A2F80-6887-11D3-842E-005004848CBA}"
# PROP Target_Dir ""
# ADD BASE RSC /l 0x409 /d UNDER_CE=$(CEVersion) /d _WIN32_WCE=$(CEVersion) /d "NDEBUG" /d "UNICODE" /d "_UNICODE" /d "$(CePlatform)" /d "ARM" /d "_ARM_" /d "ARMV4" /r
# ADD RSC /l 0x409 /d UNDER_CE=$(CEVersion) /d _WIN32_WCE=$(CEVersion) /d "NDEBUG" /d "UNICODE" /d "_UNICODE" /d "$(CePlatform)" /d "ARM" /d "_ARM_" /d "ARMV4" /r
# ADD BASE CPP /nologo /W3 /D _WIN32_WCE=$(CEVersion) /D "$(CePlatform)" /D "ARM" /D "_ARM_" /D "ARMV4" /D UNDER_CE=$(CEVersion) /D "UNICODE" /D "_UNICODE" /D "NDEBUG" /Yu"stdafx.h" /O2 /M$(CECrtMT) /c
# ADD CPP /nologo /W3 /GX /D _WIN32_WCE=$(CEVersion) /D "$(CePlatform)" /D "ARM" /D "_ARM_" /D "ARMV4" /D UNDER_CE=$(CEVersion) /D "UNICODE" /D "_UNICODE" /D "NDEBUG" /D "STRICT" /D "_STLP_NO_IOSTREAMS" /Yu"stdafx.h" /O2 /M$(CECrtMT) /c
# ADD BASE MTL /nologo /D "NDEBUG" /mktyplib203 /o "NUL" /win32
# ADD MTL /nologo /D "NDEBUG" /mktyplib203 /o "NUL" /win32
BSC32=bscmake.exe
# ADD BASE BSC32 /nologo
# ADD BSC32 /nologo
LINK32=link.exe
# ADD BASE LINK32 commctrl.lib coredll.lib /nologo /base:"0x00010000" /stack:0x10000,0x1000 /entry:"WinMainCRTStartup" /nodefaultlib:"$(CENoDefaultLib)" /subsystem:$(CESubsystem) /align:"4096" /MACHINE:ARM
# ADD LINK32 commctrl.lib coredll.lib /nologo /base:"0x00010000" /stack:0x10000,0x1000 /entry:"WinMainCRTStartup" /nodefaultlib:"$(CENoDefaultLib)" /subsystem:$(CESubsystem) /align:"4096" /MACHINE:ARM

!ELSEIF  "$(CFG)" == "Recorder - Win32 (WCE ARMV4) Debug"

# PROP BASE Use_MFC 0
# PROP BASE Use_Debug_Libraries 1
# PROP BASE Output_Dir "ARMV4Dbg"
# PROP BASE Intermediate_Dir "ARMV4Dbg"
# PROP BASE CPU_ID "{ECBEA43D-CD7B-4852-AD55-D4227B5D624B}"
# PROP BASE Platform_ID "{8A9A2F80-6887-11D3-842E-005004848CBA}"
# PROP BASE Target_Dir ""
# PROP Use_MFC 0
# PROP Use_Debug_Libraries 1
# PROP Output_Dir "ARMV4Dbg"
# PROP Intermediate_Dir "ARMV4Dbg\intermediate"
# PROP CPU_ID "{ECBEA43D-CD7B-4852-AD55-D4227B5D624B}"
# PROP Platform_ID "{8A9A2F80-6887-11D3-842E-005004848CBA}"
# PROP Ignore_Export_Lib 0
# PROP Target_Dir ""
# ADD BASE RSC /l 0x409 /d UNDER_CE=$(CEVersion) /d _WIN32_WCE=$(CEVersion) /d "DEBUG" /d "UNICODE" /d "_UNICODE" /d "$(CePlatform)" /d "ARM" /d "_ARM_" /d "ARMV4" /r
# ADD RSC /l 0x409 /d UNDER_CE=$(CEVersion) /d _WIN32_WCE=$(CEVersion) /d "DEBUG" /d "UNICODE" /d "_UNICODE" /d "$(CePlatform)" /d "ARM" /d "_ARM_" /d "ARMV4" /r
# ADD BASE CPP /nologo /W3 /Zi /Od /D "DEBUG" /D "ARM" /D "_ARM_" /D "ARMV4" /D UNDER_CE=$(CEVersion) /D _WIN32_WCE=$(CEVersion) /D "$(CePlatform)" /D "UNICODE" /D "_UNICODE" /Yu"stdafx.h" /M$(CECrtMTDebug) /c
# ADD CPP /nologo /W3 /GX /Zi /Od /D "DEBUG" /D "ARM" /D "_ARM_" /D "ARMV4" /D UNDER_CE=$(CEVersion) /D _WIN32_WCE=$(CEVersion) /D "$(CePlatform)" /D "UNICODE" /D "_UNICODE" /D "STRICT" /D "_STLP_NO_IOSTREAMS" /FR /Yu"stdafx.h" /M$(CECrtMTDebug) /c
# ADD BASE MTL /nologo /D "_DEBUG" /mktyplib203 /o "NUL" /win32
# ADD MTL /nologo /D "_DEBUG" /mktyplib203 /o "NUL" /win32
BSC32=bscmake.exe
# ADD BASE BSC32 /nologo
# ADD BSC32 /nologo
LINK32=link.exe
# ADD BASE LINK32 commctrl.lib coredll.lib /nologo /base:"0x00010000" /stack:0x10000,0x1000 /entry:"WinMainCRTStartup" /debug /nodefaultlib:"$(CENoDefaultLib)" /subsystem:$(CESubsystem) /align:"4096" /MACHINE:ARM
# ADD LINK32 commctrl.lib coredll.lib /nologo /base:"0x00010000" /stack:0x10000,0x1000 /entry:"WinMainCRTStartup" /debug /nodefaultlib:"$(CENoDefaultLib)" /subsystem:$(CESubsystem) /align:"4096" /MACHINE:ARM

!ENDIF 

# Begin Target

# Name "Recorder - Win32 (WCE ARMV4) Release"
# Name "Recorder - Win32 (WCE ARMV4) Debug"
# Begin Group "Source Files"

# PROP Default_Filter "cpp;c;cxx;rc;def;r;odl;idl;hpj;bat"
# Begin Source File

SOURCE=.\AboutDlg.cpp
DEP_CPP_ABOUT=\
	".\AboutDlg.h"\
	".\stdafx.h"\
	{$(INCLUDE)}"atlapp.h"\
	{$(INCLUDE)}"atlctrls.h"\
	{$(INCLUDE)}"atlctrlw.h"\
	{$(INCLUDE)}"atldlgs.h"\
	{$(INCLUDE)}"atlframe.h"\
	{$(INCLUDE)}"atlgdi.h"\
	{$(INCLUDE)}"atlmisc.h"\
	{$(INCLUDE)}"atlres.h"\
	{$(INCLUDE)}"atlresce.h"\
	{$(INCLUDE)}"atluser.h"\
	{$(INCLUDE)}"atlwince.h"\
	{$(INCLUDE)}"atlwinx.h"\
	{$(INCLUDE)}"aygshell.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\no_tr1\utility.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\bad_weak_ptr.hpp"\
	{$(INCLUDE)}"boost\detail\interlocked.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_cw_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ia64.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_x86.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_nt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_pt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_w32.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_impl.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\adl_barrier.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\adl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\arrays.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ctps.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\gcc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\integral.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\intel.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\nttp_decl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\static_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\yes_no.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_tag.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void_fwd.hpp"\
	{$(INCLUDE)}"boost\non_type.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\dmc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\dmc\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\append.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\dmc\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\transform.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\dmc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\integral_constant.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_abstract.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_const.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_polymorphic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_volatile.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\typeof.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"doclist.h"\
	{$(INCLUDE)}"htmlctrl.h"\
	{$(INCLUDE)}"inkx.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"richink.h"\
	{$(INCLUDE)}"shobjidl.h"\
	{$(INCLUDE)}"shtypes.h"\
	{$(INCLUDE)}"sipapi.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_check_config.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_stlport_version.h"\
	{$(INCLUDE)}"stl\config\_aix.h"\
	{$(INCLUDE)}"stl\config\_apcc.h"\
	{$(INCLUDE)}"stl\config\_apple.h"\
	{$(INCLUDE)}"stl\config\_as400.h"\
	{$(INCLUDE)}"stl\config\_auto_link.h"\
	{$(INCLUDE)}"stl\config\_bc.h"\
	{$(INCLUDE)}"stl\config\_como.h"\
	{$(INCLUDE)}"stl\config\_cygwin.h"\
	{$(INCLUDE)}"stl\config\_dec.h"\
	{$(INCLUDE)}"stl\config\_dec_vms.h"\
	{$(INCLUDE)}"stl\config\_detect_dll_or_lib.h"\
	{$(INCLUDE)}"stl\config\_dm.h"\
	{$(INCLUDE)}"stl\config\_epilog.h"\
	{$(INCLUDE)}"stl\config\_evc.h"\
	{$(INCLUDE)}"stl\config\_freebsd.h"\
	{$(INCLUDE)}"stl\config\_fujitsu.h"\
	{$(INCLUDE)}"stl\config\_gcc.h"\
	{$(INCLUDE)}"stl\config\_hpacc.h"\
	{$(INCLUDE)}"stl\config\_hpux.h"\
	{$(INCLUDE)}"stl\config\_ibm.h"\
	{$(INCLUDE)}"stl\config\_icc.h"\
	{$(INCLUDE)}"stl\config\_intel.h"\
	{$(INCLUDE)}"stl\config\_kai.h"\
	{$(INCLUDE)}"stl\config\_linux.h"\
	{$(INCLUDE)}"stl\config\_mac.h"\
	{$(INCLUDE)}"stl\config\_macosx.h"\
	{$(INCLUDE)}"stl\config\_msvc.h"\
	{$(INCLUDE)}"stl\config\_mwccnlm.h"\
	{$(INCLUDE)}"stl\config\_mwerks.h"\
	{$(INCLUDE)}"stl\config\_native_headers.h"\
	{$(INCLUDE)}"stl\config\_netware.h"\
	{$(INCLUDE)}"stl\config\_openbsd.h"\
	{$(INCLUDE)}"stl\config\_prolog.h"\
	{$(INCLUDE)}"stl\config\_sgi.h"\
	{$(INCLUDE)}"stl\config\_solaris.h"\
	{$(INCLUDE)}"stl\config\_sunprocc.h"\
	{$(INCLUDE)}"stl\config\_symantec.h"\
	{$(INCLUDE)}"stl\config\_system.h"\
	{$(INCLUDE)}"stl\config\_warnings_off.h"\
	{$(INCLUDE)}"stl\config\_watcom.h"\
	{$(INCLUDE)}"stl\config\_windows.h"\
	{$(INCLUDE)}"stl\config\compat.h"\
	{$(INCLUDE)}"stl\config\features.h"\
	{$(INCLUDE)}"stl\config\host.h"\
	{$(INCLUDE)}"stl\config\stl_confix.h"\
	{$(INCLUDE)}"stl\config\stl_mycomp.h"\
	{$(INCLUDE)}"stl\config\user_config.h"\
	{$(INCLUDE)}"tpcshell.h"\
	{$(INCLUDE)}"ulib\config\atl.hpp"\
	{$(INCLUDE)}"ulib\config\config.hpp"\
	{$(INCLUDE)}"ulib\config\workarounds.hpp"\
	{$(INCLUDE)}"ulib\config\wtl.hpp"\
	{$(INCLUDE)}"ulib\Exception.hpp"\
	{$(INCLUDE)}"vibrate.h"\
	{$(INCLUDE)}"voicectl.h"\
	{$(INCLUDE)}"winuserm.h"\
	
NODEP_CPP_ABOUT=\
	"..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\Application.cpp
DEP_CPP_APPLI=\
	".\Application.hpp"\
	".\BatteryManager.hpp"\
	".\DisplayOffManager.hpp"\
	".\Receiver.hpp"\
	".\Settings.hpp"\
	".\stdafx.h"\
	{$(INCLUDE)}"atlapp.h"\
	{$(INCLUDE)}"atlctrls.h"\
	{$(INCLUDE)}"atlctrlw.h"\
	{$(INCLUDE)}"atldlgs.h"\
	{$(INCLUDE)}"atlframe.h"\
	{$(INCLUDE)}"atlgdi.h"\
	{$(INCLUDE)}"atlmisc.h"\
	{$(INCLUDE)}"atlres.h"\
	{$(INCLUDE)}"atlresce.h"\
	{$(INCLUDE)}"atluser.h"\
	{$(INCLUDE)}"atlwince.h"\
	{$(INCLUDE)}"atlwinx.h"\
	{$(INCLUDE)}"aygshell.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_cc.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_template.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_vw.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\no_tr1\utility.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\bad_weak_ptr.hpp"\
	{$(INCLUDE)}"boost\detail\interlocked.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_cw_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ia64.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_x86.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_nt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_pt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_w32.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_impl.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\function.hpp"\
	{$(INCLUDE)}"boost\function\detail\maybe_include.hpp"\
	{$(INCLUDE)}"boost\function\detail\prologue.hpp"\
	{$(INCLUDE)}"boost\function\function0.hpp"\
	{$(INCLUDE)}"boost\function\function1.hpp"\
	{$(INCLUDE)}"boost\function\function10.hpp"\
	{$(INCLUDE)}"boost\function\function2.hpp"\
	{$(INCLUDE)}"boost\function\function3.hpp"\
	{$(INCLUDE)}"boost\function\function4.hpp"\
	{$(INCLUDE)}"boost\function\function5.hpp"\
	{$(INCLUDE)}"boost\function\function6.hpp"\
	{$(INCLUDE)}"boost\function\function7.hpp"\
	{$(INCLUDE)}"boost\function\function8.hpp"\
	{$(INCLUDE)}"boost\function\function9.hpp"\
	{$(INCLUDE)}"boost\function\function_base.hpp"\
	{$(INCLUDE)}"boost\function\function_template.hpp"\
	{$(INCLUDE)}"boost\function_equal.hpp"\
	{$(INCLUDE)}"boost\get_pointer.hpp"\
	{$(INCLUDE)}"boost\mem_fn.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\adl_barrier.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\adl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\arrays.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ctps.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\gcc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\integral.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\intel.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\nttp_decl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\static_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\yes_no.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_tag.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void_fwd.hpp"\
	{$(INCLUDE)}"boost\non_type.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\dmc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\dmc\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\append.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\dmc\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\transform.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\dmc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\ref.hpp"\
	{$(INCLUDE)}"boost\scoped_ptr.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\composite_traits.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\integral_constant.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_abstract.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_const.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_polymorphic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_volatile.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\typeof.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"boost\utility\addressof.hpp"\
	{$(INCLUDE)}"boost\utility\enable_if.hpp"\
	{$(INCLUDE)}"doclist.h"\
	{$(INCLUDE)}"htmlctrl.h"\
	{$(INCLUDE)}"inkx.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"richink.h"\
	{$(INCLUDE)}"shobjidl.h"\
	{$(INCLUDE)}"shtypes.h"\
	{$(INCLUDE)}"sipapi.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_check_config.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_stlport_version.h"\
	{$(INCLUDE)}"stl\config\_aix.h"\
	{$(INCLUDE)}"stl\config\_apcc.h"\
	{$(INCLUDE)}"stl\config\_apple.h"\
	{$(INCLUDE)}"stl\config\_as400.h"\
	{$(INCLUDE)}"stl\config\_auto_link.h"\
	{$(INCLUDE)}"stl\config\_bc.h"\
	{$(INCLUDE)}"stl\config\_como.h"\
	{$(INCLUDE)}"stl\config\_cygwin.h"\
	{$(INCLUDE)}"stl\config\_dec.h"\
	{$(INCLUDE)}"stl\config\_dec_vms.h"\
	{$(INCLUDE)}"stl\config\_detect_dll_or_lib.h"\
	{$(INCLUDE)}"stl\config\_dm.h"\
	{$(INCLUDE)}"stl\config\_epilog.h"\
	{$(INCLUDE)}"stl\config\_evc.h"\
	{$(INCLUDE)}"stl\config\_freebsd.h"\
	{$(INCLUDE)}"stl\config\_fujitsu.h"\
	{$(INCLUDE)}"stl\config\_gcc.h"\
	{$(INCLUDE)}"stl\config\_hpacc.h"\
	{$(INCLUDE)}"stl\config\_hpux.h"\
	{$(INCLUDE)}"stl\config\_ibm.h"\
	{$(INCLUDE)}"stl\config\_icc.h"\
	{$(INCLUDE)}"stl\config\_intel.h"\
	{$(INCLUDE)}"stl\config\_kai.h"\
	{$(INCLUDE)}"stl\config\_linux.h"\
	{$(INCLUDE)}"stl\config\_mac.h"\
	{$(INCLUDE)}"stl\config\_macosx.h"\
	{$(INCLUDE)}"stl\config\_msvc.h"\
	{$(INCLUDE)}"stl\config\_mwccnlm.h"\
	{$(INCLUDE)}"stl\config\_mwerks.h"\
	{$(INCLUDE)}"stl\config\_native_headers.h"\
	{$(INCLUDE)}"stl\config\_netware.h"\
	{$(INCLUDE)}"stl\config\_openbsd.h"\
	{$(INCLUDE)}"stl\config\_prolog.h"\
	{$(INCLUDE)}"stl\config\_sgi.h"\
	{$(INCLUDE)}"stl\config\_solaris.h"\
	{$(INCLUDE)}"stl\config\_sunprocc.h"\
	{$(INCLUDE)}"stl\config\_symantec.h"\
	{$(INCLUDE)}"stl\config\_system.h"\
	{$(INCLUDE)}"stl\config\_warnings_off.h"\
	{$(INCLUDE)}"stl\config\_watcom.h"\
	{$(INCLUDE)}"stl\config\_windows.h"\
	{$(INCLUDE)}"stl\config\compat.h"\
	{$(INCLUDE)}"stl\config\features.h"\
	{$(INCLUDE)}"stl\config\host.h"\
	{$(INCLUDE)}"stl\config\stl_confix.h"\
	{$(INCLUDE)}"stl\config\stl_mycomp.h"\
	{$(INCLUDE)}"stl\config\user_config.h"\
	{$(INCLUDE)}"tpcshell.h"\
	{$(INCLUDE)}"ulib\config\atl.hpp"\
	{$(INCLUDE)}"ulib\config\config.hpp"\
	{$(INCLUDE)}"ulib\config\workarounds.hpp"\
	{$(INCLUDE)}"ulib\config\wtl.hpp"\
	{$(INCLUDE)}"ulib\datetime\DateTime.hpp"\
	{$(INCLUDE)}"ulib\Exception.hpp"\
	{$(INCLUDE)}"ulib\log\Appender.hpp"\
	{$(INCLUDE)}"ulib\log\Layout.hpp"\
	{$(INCLUDE)}"ulib\log\Log.hpp"\
	{$(INCLUDE)}"ulib\log\Logger.hpp"\
	{$(INCLUDE)}"ulib\log\LoggingEvent.hpp"\
	{$(INCLUDE)}"ulib\log\TextStreamAppender.hpp"\
	{$(INCLUDE)}"ulib\mt\CriticalSection.hpp"\
	{$(INCLUDE)}"ulib\stream\FileStream.hpp"\
	{$(INCLUDE)}"ulib\stream\IStream.hpp"\
	{$(INCLUDE)}"ulib\stream\ITextStream.hpp"\
	{$(INCLUDE)}"ulib\stream\TextFileStream.hpp"\
	{$(INCLUDE)}"ulib\stream\TextStreamFilter.hpp"\
	{$(INCLUDE)}"ulib\wince\HardwareKeyManager.hpp"\
	{$(INCLUDE)}"vibrate.h"\
	{$(INCLUDE)}"voicectl.h"\
	{$(INCLUDE)}"winuserm.h"\
	
NODEP_CPP_APPLI=\
	"..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\BacklightManager.cpp
DEP_CPP_BACKL=\
	".\BacklightManager.hpp"\
	".\stdafx.h"\
	{$(INCLUDE)}"atlapp.h"\
	{$(INCLUDE)}"atlctrls.h"\
	{$(INCLUDE)}"atlctrlw.h"\
	{$(INCLUDE)}"atldlgs.h"\
	{$(INCLUDE)}"atlframe.h"\
	{$(INCLUDE)}"atlgdi.h"\
	{$(INCLUDE)}"atlmisc.h"\
	{$(INCLUDE)}"atlres.h"\
	{$(INCLUDE)}"atlresce.h"\
	{$(INCLUDE)}"atluser.h"\
	{$(INCLUDE)}"atlwince.h"\
	{$(INCLUDE)}"atlwinx.h"\
	{$(INCLUDE)}"aygshell.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\no_tr1\utility.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\bad_weak_ptr.hpp"\
	{$(INCLUDE)}"boost\detail\interlocked.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_cw_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ia64.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_x86.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_nt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_pt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_w32.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_impl.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\adl_barrier.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\adl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\arrays.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ctps.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\gcc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\integral.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\intel.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\nttp_decl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\static_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\yes_no.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_tag.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void_fwd.hpp"\
	{$(INCLUDE)}"boost\non_type.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\dmc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\dmc\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\append.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\dmc\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\transform.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\dmc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\integral_constant.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_abstract.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_const.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_polymorphic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_volatile.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\typeof.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"doclist.h"\
	{$(INCLUDE)}"htmlctrl.h"\
	{$(INCLUDE)}"inkx.h"\
	{$(INCLUDE)}"pm.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"richink.h"\
	{$(INCLUDE)}"shobjidl.h"\
	{$(INCLUDE)}"shtypes.h"\
	{$(INCLUDE)}"sipapi.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_check_config.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_stlport_version.h"\
	{$(INCLUDE)}"stl\config\_aix.h"\
	{$(INCLUDE)}"stl\config\_apcc.h"\
	{$(INCLUDE)}"stl\config\_apple.h"\
	{$(INCLUDE)}"stl\config\_as400.h"\
	{$(INCLUDE)}"stl\config\_auto_link.h"\
	{$(INCLUDE)}"stl\config\_bc.h"\
	{$(INCLUDE)}"stl\config\_como.h"\
	{$(INCLUDE)}"stl\config\_cygwin.h"\
	{$(INCLUDE)}"stl\config\_dec.h"\
	{$(INCLUDE)}"stl\config\_dec_vms.h"\
	{$(INCLUDE)}"stl\config\_detect_dll_or_lib.h"\
	{$(INCLUDE)}"stl\config\_dm.h"\
	{$(INCLUDE)}"stl\config\_epilog.h"\
	{$(INCLUDE)}"stl\config\_evc.h"\
	{$(INCLUDE)}"stl\config\_freebsd.h"\
	{$(INCLUDE)}"stl\config\_fujitsu.h"\
	{$(INCLUDE)}"stl\config\_gcc.h"\
	{$(INCLUDE)}"stl\config\_hpacc.h"\
	{$(INCLUDE)}"stl\config\_hpux.h"\
	{$(INCLUDE)}"stl\config\_ibm.h"\
	{$(INCLUDE)}"stl\config\_icc.h"\
	{$(INCLUDE)}"stl\config\_intel.h"\
	{$(INCLUDE)}"stl\config\_kai.h"\
	{$(INCLUDE)}"stl\config\_linux.h"\
	{$(INCLUDE)}"stl\config\_mac.h"\
	{$(INCLUDE)}"stl\config\_macosx.h"\
	{$(INCLUDE)}"stl\config\_msvc.h"\
	{$(INCLUDE)}"stl\config\_mwccnlm.h"\
	{$(INCLUDE)}"stl\config\_mwerks.h"\
	{$(INCLUDE)}"stl\config\_native_headers.h"\
	{$(INCLUDE)}"stl\config\_netware.h"\
	{$(INCLUDE)}"stl\config\_openbsd.h"\
	{$(INCLUDE)}"stl\config\_prolog.h"\
	{$(INCLUDE)}"stl\config\_sgi.h"\
	{$(INCLUDE)}"stl\config\_solaris.h"\
	{$(INCLUDE)}"stl\config\_sunprocc.h"\
	{$(INCLUDE)}"stl\config\_symantec.h"\
	{$(INCLUDE)}"stl\config\_system.h"\
	{$(INCLUDE)}"stl\config\_warnings_off.h"\
	{$(INCLUDE)}"stl\config\_watcom.h"\
	{$(INCLUDE)}"stl\config\_windows.h"\
	{$(INCLUDE)}"stl\config\compat.h"\
	{$(INCLUDE)}"stl\config\features.h"\
	{$(INCLUDE)}"stl\config\host.h"\
	{$(INCLUDE)}"stl\config\stl_confix.h"\
	{$(INCLUDE)}"stl\config\stl_mycomp.h"\
	{$(INCLUDE)}"stl\config\user_config.h"\
	{$(INCLUDE)}"tpcshell.h"\
	{$(INCLUDE)}"ulib\config\atl.hpp"\
	{$(INCLUDE)}"ulib\config\config.hpp"\
	{$(INCLUDE)}"ulib\config\workarounds.hpp"\
	{$(INCLUDE)}"ulib\config\wtl.hpp"\
	{$(INCLUDE)}"ulib\Exception.hpp"\
	{$(INCLUDE)}"vibrate.h"\
	{$(INCLUDE)}"voicectl.h"\
	{$(INCLUDE)}"winuserm.h"\
	
NODEP_CPP_BACKL=\
	"..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\BatteryManager.cpp
DEP_CPP_BATTE=\
	".\BatteryManager.hpp"\
	".\stdafx.h"\
	{$(INCLUDE)}"atlapp.h"\
	{$(INCLUDE)}"atlctrls.h"\
	{$(INCLUDE)}"atlctrlw.h"\
	{$(INCLUDE)}"atldlgs.h"\
	{$(INCLUDE)}"atlframe.h"\
	{$(INCLUDE)}"atlgdi.h"\
	{$(INCLUDE)}"atlmisc.h"\
	{$(INCLUDE)}"atlres.h"\
	{$(INCLUDE)}"atlresce.h"\
	{$(INCLUDE)}"atluser.h"\
	{$(INCLUDE)}"atlwince.h"\
	{$(INCLUDE)}"atlwinx.h"\
	{$(INCLUDE)}"aygshell.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\no_tr1\utility.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\bad_weak_ptr.hpp"\
	{$(INCLUDE)}"boost\detail\interlocked.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_cw_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ia64.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_x86.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_nt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_pt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_w32.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_impl.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\adl_barrier.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\adl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\arrays.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ctps.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\gcc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\integral.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\intel.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\nttp_decl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\static_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\yes_no.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_tag.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void_fwd.hpp"\
	{$(INCLUDE)}"boost\non_type.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\dmc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\dmc\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\append.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\dmc\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\transform.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\dmc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\integral_constant.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_abstract.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_const.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_polymorphic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_volatile.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\typeof.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"doclist.h"\
	{$(INCLUDE)}"htmlctrl.h"\
	{$(INCLUDE)}"inkx.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"richink.h"\
	{$(INCLUDE)}"shobjidl.h"\
	{$(INCLUDE)}"shtypes.h"\
	{$(INCLUDE)}"sipapi.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_check_config.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_stlport_version.h"\
	{$(INCLUDE)}"stl\config\_aix.h"\
	{$(INCLUDE)}"stl\config\_apcc.h"\
	{$(INCLUDE)}"stl\config\_apple.h"\
	{$(INCLUDE)}"stl\config\_as400.h"\
	{$(INCLUDE)}"stl\config\_auto_link.h"\
	{$(INCLUDE)}"stl\config\_bc.h"\
	{$(INCLUDE)}"stl\config\_como.h"\
	{$(INCLUDE)}"stl\config\_cygwin.h"\
	{$(INCLUDE)}"stl\config\_dec.h"\
	{$(INCLUDE)}"stl\config\_dec_vms.h"\
	{$(INCLUDE)}"stl\config\_detect_dll_or_lib.h"\
	{$(INCLUDE)}"stl\config\_dm.h"\
	{$(INCLUDE)}"stl\config\_epilog.h"\
	{$(INCLUDE)}"stl\config\_evc.h"\
	{$(INCLUDE)}"stl\config\_freebsd.h"\
	{$(INCLUDE)}"stl\config\_fujitsu.h"\
	{$(INCLUDE)}"stl\config\_gcc.h"\
	{$(INCLUDE)}"stl\config\_hpacc.h"\
	{$(INCLUDE)}"stl\config\_hpux.h"\
	{$(INCLUDE)}"stl\config\_ibm.h"\
	{$(INCLUDE)}"stl\config\_icc.h"\
	{$(INCLUDE)}"stl\config\_intel.h"\
	{$(INCLUDE)}"stl\config\_kai.h"\
	{$(INCLUDE)}"stl\config\_linux.h"\
	{$(INCLUDE)}"stl\config\_mac.h"\
	{$(INCLUDE)}"stl\config\_macosx.h"\
	{$(INCLUDE)}"stl\config\_msvc.h"\
	{$(INCLUDE)}"stl\config\_mwccnlm.h"\
	{$(INCLUDE)}"stl\config\_mwerks.h"\
	{$(INCLUDE)}"stl\config\_native_headers.h"\
	{$(INCLUDE)}"stl\config\_netware.h"\
	{$(INCLUDE)}"stl\config\_openbsd.h"\
	{$(INCLUDE)}"stl\config\_prolog.h"\
	{$(INCLUDE)}"stl\config\_sgi.h"\
	{$(INCLUDE)}"stl\config\_solaris.h"\
	{$(INCLUDE)}"stl\config\_sunprocc.h"\
	{$(INCLUDE)}"stl\config\_symantec.h"\
	{$(INCLUDE)}"stl\config\_system.h"\
	{$(INCLUDE)}"stl\config\_warnings_off.h"\
	{$(INCLUDE)}"stl\config\_watcom.h"\
	{$(INCLUDE)}"stl\config\_windows.h"\
	{$(INCLUDE)}"stl\config\compat.h"\
	{$(INCLUDE)}"stl\config\features.h"\
	{$(INCLUDE)}"stl\config\host.h"\
	{$(INCLUDE)}"stl\config\stl_confix.h"\
	{$(INCLUDE)}"stl\config\stl_mycomp.h"\
	{$(INCLUDE)}"stl\config\user_config.h"\
	{$(INCLUDE)}"tpcshell.h"\
	{$(INCLUDE)}"ulib\config\atl.hpp"\
	{$(INCLUDE)}"ulib\config\config.hpp"\
	{$(INCLUDE)}"ulib\config\workarounds.hpp"\
	{$(INCLUDE)}"ulib\config\wtl.hpp"\
	{$(INCLUDE)}"ulib\datetime\DateTime.hpp"\
	{$(INCLUDE)}"ulib\Exception.hpp"\
	{$(INCLUDE)}"ulib\log\Log.hpp"\
	{$(INCLUDE)}"ulib\log\Logger.hpp"\
	{$(INCLUDE)}"ulib\tools\Win32ErrorMessage.hpp"\
	{$(INCLUDE)}"vibrate.h"\
	{$(INCLUDE)}"voicectl.h"\
	{$(INCLUDE)}"winuserm.h"\
	
NODEP_CPP_BATTE=\
	"..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\DisplayOffManager.cpp
DEP_CPP_DISPL=\
	".\DisplayOffManager.hpp"\
	".\stdafx.h"\
	{$(INCLUDE)}"atlapp.h"\
	{$(INCLUDE)}"atlctrls.h"\
	{$(INCLUDE)}"atlctrlw.h"\
	{$(INCLUDE)}"atldlgs.h"\
	{$(INCLUDE)}"atlframe.h"\
	{$(INCLUDE)}"atlgdi.h"\
	{$(INCLUDE)}"atlmisc.h"\
	{$(INCLUDE)}"atlres.h"\
	{$(INCLUDE)}"atlresce.h"\
	{$(INCLUDE)}"atluser.h"\
	{$(INCLUDE)}"atlwince.h"\
	{$(INCLUDE)}"atlwinx.h"\
	{$(INCLUDE)}"aygshell.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_cc.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_template.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_vw.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\no_tr1\utility.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\bad_weak_ptr.hpp"\
	{$(INCLUDE)}"boost\detail\interlocked.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_cw_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ia64.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_x86.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_nt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_pt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_w32.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_impl.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\function.hpp"\
	{$(INCLUDE)}"boost\function\detail\maybe_include.hpp"\
	{$(INCLUDE)}"boost\function\detail\prologue.hpp"\
	{$(INCLUDE)}"boost\function\function0.hpp"\
	{$(INCLUDE)}"boost\function\function1.hpp"\
	{$(INCLUDE)}"boost\function\function10.hpp"\
	{$(INCLUDE)}"boost\function\function2.hpp"\
	{$(INCLUDE)}"boost\function\function3.hpp"\
	{$(INCLUDE)}"boost\function\function4.hpp"\
	{$(INCLUDE)}"boost\function\function5.hpp"\
	{$(INCLUDE)}"boost\function\function6.hpp"\
	{$(INCLUDE)}"boost\function\function7.hpp"\
	{$(INCLUDE)}"boost\function\function8.hpp"\
	{$(INCLUDE)}"boost\function\function9.hpp"\
	{$(INCLUDE)}"boost\function\function_base.hpp"\
	{$(INCLUDE)}"boost\function\function_template.hpp"\
	{$(INCLUDE)}"boost\function_equal.hpp"\
	{$(INCLUDE)}"boost\get_pointer.hpp"\
	{$(INCLUDE)}"boost\mem_fn.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\adl_barrier.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\adl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\arrays.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ctps.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\gcc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\integral.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\intel.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\nttp_decl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\static_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\yes_no.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_tag.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void_fwd.hpp"\
	{$(INCLUDE)}"boost\non_type.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\dmc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\dmc\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\append.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\dmc\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\transform.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\dmc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\ref.hpp"\
	{$(INCLUDE)}"boost\scoped_ptr.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\composite_traits.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\integral_constant.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_abstract.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_const.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_polymorphic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_volatile.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\typeof.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"boost\utility\addressof.hpp"\
	{$(INCLUDE)}"boost\utility\enable_if.hpp"\
	{$(INCLUDE)}"doclist.h"\
	{$(INCLUDE)}"htmlctrl.h"\
	{$(INCLUDE)}"inkx.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"richink.h"\
	{$(INCLUDE)}"shobjidl.h"\
	{$(INCLUDE)}"shtypes.h"\
	{$(INCLUDE)}"sipapi.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_check_config.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_stlport_version.h"\
	{$(INCLUDE)}"stl\config\_aix.h"\
	{$(INCLUDE)}"stl\config\_apcc.h"\
	{$(INCLUDE)}"stl\config\_apple.h"\
	{$(INCLUDE)}"stl\config\_as400.h"\
	{$(INCLUDE)}"stl\config\_auto_link.h"\
	{$(INCLUDE)}"stl\config\_bc.h"\
	{$(INCLUDE)}"stl\config\_como.h"\
	{$(INCLUDE)}"stl\config\_cygwin.h"\
	{$(INCLUDE)}"stl\config\_dec.h"\
	{$(INCLUDE)}"stl\config\_dec_vms.h"\
	{$(INCLUDE)}"stl\config\_detect_dll_or_lib.h"\
	{$(INCLUDE)}"stl\config\_dm.h"\
	{$(INCLUDE)}"stl\config\_epilog.h"\
	{$(INCLUDE)}"stl\config\_evc.h"\
	{$(INCLUDE)}"stl\config\_freebsd.h"\
	{$(INCLUDE)}"stl\config\_fujitsu.h"\
	{$(INCLUDE)}"stl\config\_gcc.h"\
	{$(INCLUDE)}"stl\config\_hpacc.h"\
	{$(INCLUDE)}"stl\config\_hpux.h"\
	{$(INCLUDE)}"stl\config\_ibm.h"\
	{$(INCLUDE)}"stl\config\_icc.h"\
	{$(INCLUDE)}"stl\config\_intel.h"\
	{$(INCLUDE)}"stl\config\_kai.h"\
	{$(INCLUDE)}"stl\config\_linux.h"\
	{$(INCLUDE)}"stl\config\_mac.h"\
	{$(INCLUDE)}"stl\config\_macosx.h"\
	{$(INCLUDE)}"stl\config\_msvc.h"\
	{$(INCLUDE)}"stl\config\_mwccnlm.h"\
	{$(INCLUDE)}"stl\config\_mwerks.h"\
	{$(INCLUDE)}"stl\config\_native_headers.h"\
	{$(INCLUDE)}"stl\config\_netware.h"\
	{$(INCLUDE)}"stl\config\_openbsd.h"\
	{$(INCLUDE)}"stl\config\_prolog.h"\
	{$(INCLUDE)}"stl\config\_sgi.h"\
	{$(INCLUDE)}"stl\config\_solaris.h"\
	{$(INCLUDE)}"stl\config\_sunprocc.h"\
	{$(INCLUDE)}"stl\config\_symantec.h"\
	{$(INCLUDE)}"stl\config\_system.h"\
	{$(INCLUDE)}"stl\config\_warnings_off.h"\
	{$(INCLUDE)}"stl\config\_watcom.h"\
	{$(INCLUDE)}"stl\config\_windows.h"\
	{$(INCLUDE)}"stl\config\compat.h"\
	{$(INCLUDE)}"stl\config\features.h"\
	{$(INCLUDE)}"stl\config\host.h"\
	{$(INCLUDE)}"stl\config\stl_confix.h"\
	{$(INCLUDE)}"stl\config\stl_mycomp.h"\
	{$(INCLUDE)}"stl\config\user_config.h"\
	{$(INCLUDE)}"tpcshell.h"\
	{$(INCLUDE)}"ulib\config\atl.hpp"\
	{$(INCLUDE)}"ulib\config\config.hpp"\
	{$(INCLUDE)}"ulib\config\workarounds.hpp"\
	{$(INCLUDE)}"ulib\config\wtl.hpp"\
	{$(INCLUDE)}"ulib\Exception.hpp"\
	{$(INCLUDE)}"ulib\log\Log.hpp"\
	{$(INCLUDE)}"ulib\log\Logger.hpp"\
	{$(INCLUDE)}"ulib\wince\HardwareKeyManager.hpp"\
	{$(INCLUDE)}"ulib\wince\VideoPowerManager.hpp"\
	{$(INCLUDE)}"vibrate.h"\
	{$(INCLUDE)}"voicectl.h"\
	{$(INCLUDE)}"winuserm.h"\
	
NODEP_CPP_DISPL=\
	"..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\Receiver.cpp
DEP_CPP_RECEI=\
	".\Receiver.hpp"\
	".\stdafx.h"\
	{$(INCLUDE)}"atlapp.h"\
	{$(INCLUDE)}"atlctrls.h"\
	{$(INCLUDE)}"atlctrlw.h"\
	{$(INCLUDE)}"atldlgs.h"\
	{$(INCLUDE)}"atlframe.h"\
	{$(INCLUDE)}"atlgdi.h"\
	{$(INCLUDE)}"atlmisc.h"\
	{$(INCLUDE)}"atlres.h"\
	{$(INCLUDE)}"atlresce.h"\
	{$(INCLUDE)}"atluser.h"\
	{$(INCLUDE)}"atlwince.h"\
	{$(INCLUDE)}"atlwinx.h"\
	{$(INCLUDE)}"aygshell.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\bind.hpp"\
	{$(INCLUDE)}"boost\bind\arg.hpp"\
	{$(INCLUDE)}"boost\bind\bind_cc.hpp"\
	{$(INCLUDE)}"boost\bind\bind_mf_cc.hpp"\
	{$(INCLUDE)}"boost\bind\bind_template.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_cc.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_template.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_vw.hpp"\
	{$(INCLUDE)}"boost\bind\placeholders.hpp"\
	{$(INCLUDE)}"boost\bind\storage.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\no_tr1\utility.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\bad_weak_ptr.hpp"\
	{$(INCLUDE)}"boost\detail\interlocked.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_cw_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ia64.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_x86.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_nt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_pt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_w32.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_impl.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\function.hpp"\
	{$(INCLUDE)}"boost\function\detail\maybe_include.hpp"\
	{$(INCLUDE)}"boost\function\detail\prologue.hpp"\
	{$(INCLUDE)}"boost\function\function0.hpp"\
	{$(INCLUDE)}"boost\function\function1.hpp"\
	{$(INCLUDE)}"boost\function\function10.hpp"\
	{$(INCLUDE)}"boost\function\function2.hpp"\
	{$(INCLUDE)}"boost\function\function3.hpp"\
	{$(INCLUDE)}"boost\function\function4.hpp"\
	{$(INCLUDE)}"boost\function\function5.hpp"\
	{$(INCLUDE)}"boost\function\function6.hpp"\
	{$(INCLUDE)}"boost\function\function7.hpp"\
	{$(INCLUDE)}"boost\function\function8.hpp"\
	{$(INCLUDE)}"boost\function\function9.hpp"\
	{$(INCLUDE)}"boost\function\function_base.hpp"\
	{$(INCLUDE)}"boost\function\function_template.hpp"\
	{$(INCLUDE)}"boost\function_equal.hpp"\
	{$(INCLUDE)}"boost\get_pointer.hpp"\
	{$(INCLUDE)}"boost\mem_fn.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\adl_barrier.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\adl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\arrays.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ctps.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\gcc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\integral.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\intel.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\nttp_decl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\static_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\yes_no.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_tag.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void_fwd.hpp"\
	{$(INCLUDE)}"boost\non_type.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\dmc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\dmc\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\append.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\dmc\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\transform.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\dmc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\ref.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\composite_traits.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\integral_constant.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_abstract.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_const.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_polymorphic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_volatile.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\typeof.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"boost\utility\addressof.hpp"\
	{$(INCLUDE)}"boost\utility\enable_if.hpp"\
	{$(INCLUDE)}"boost\visit_each.hpp"\
	{$(INCLUDE)}"doclist.h"\
	{$(INCLUDE)}"htmlctrl.h"\
	{$(INCLUDE)}"inkx.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"richink.h"\
	{$(INCLUDE)}"shobjidl.h"\
	{$(INCLUDE)}"shtypes.h"\
	{$(INCLUDE)}"sipapi.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_check_config.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_stlport_version.h"\
	{$(INCLUDE)}"stl\config\_aix.h"\
	{$(INCLUDE)}"stl\config\_apcc.h"\
	{$(INCLUDE)}"stl\config\_apple.h"\
	{$(INCLUDE)}"stl\config\_as400.h"\
	{$(INCLUDE)}"stl\config\_auto_link.h"\
	{$(INCLUDE)}"stl\config\_bc.h"\
	{$(INCLUDE)}"stl\config\_como.h"\
	{$(INCLUDE)}"stl\config\_cygwin.h"\
	{$(INCLUDE)}"stl\config\_dec.h"\
	{$(INCLUDE)}"stl\config\_dec_vms.h"\
	{$(INCLUDE)}"stl\config\_detect_dll_or_lib.h"\
	{$(INCLUDE)}"stl\config\_dm.h"\
	{$(INCLUDE)}"stl\config\_epilog.h"\
	{$(INCLUDE)}"stl\config\_evc.h"\
	{$(INCLUDE)}"stl\config\_freebsd.h"\
	{$(INCLUDE)}"stl\config\_fujitsu.h"\
	{$(INCLUDE)}"stl\config\_gcc.h"\
	{$(INCLUDE)}"stl\config\_hpacc.h"\
	{$(INCLUDE)}"stl\config\_hpux.h"\
	{$(INCLUDE)}"stl\config\_ibm.h"\
	{$(INCLUDE)}"stl\config\_icc.h"\
	{$(INCLUDE)}"stl\config\_intel.h"\
	{$(INCLUDE)}"stl\config\_kai.h"\
	{$(INCLUDE)}"stl\config\_linux.h"\
	{$(INCLUDE)}"stl\config\_mac.h"\
	{$(INCLUDE)}"stl\config\_macosx.h"\
	{$(INCLUDE)}"stl\config\_msvc.h"\
	{$(INCLUDE)}"stl\config\_mwccnlm.h"\
	{$(INCLUDE)}"stl\config\_mwerks.h"\
	{$(INCLUDE)}"stl\config\_native_headers.h"\
	{$(INCLUDE)}"stl\config\_netware.h"\
	{$(INCLUDE)}"stl\config\_openbsd.h"\
	{$(INCLUDE)}"stl\config\_prolog.h"\
	{$(INCLUDE)}"stl\config\_sgi.h"\
	{$(INCLUDE)}"stl\config\_solaris.h"\
	{$(INCLUDE)}"stl\config\_sunprocc.h"\
	{$(INCLUDE)}"stl\config\_symantec.h"\
	{$(INCLUDE)}"stl\config\_system.h"\
	{$(INCLUDE)}"stl\config\_warnings_off.h"\
	{$(INCLUDE)}"stl\config\_watcom.h"\
	{$(INCLUDE)}"stl\config\_windows.h"\
	{$(INCLUDE)}"stl\config\compat.h"\
	{$(INCLUDE)}"stl\config\features.h"\
	{$(INCLUDE)}"stl\config\host.h"\
	{$(INCLUDE)}"stl\config\stl_confix.h"\
	{$(INCLUDE)}"stl\config\stl_mycomp.h"\
	{$(INCLUDE)}"stl\config\user_config.h"\
	{$(INCLUDE)}"tpcshell.h"\
	{$(INCLUDE)}"ulib\config\atl.hpp"\
	{$(INCLUDE)}"ulib\config\config.hpp"\
	{$(INCLUDE)}"ulib\config\workarounds.hpp"\
	{$(INCLUDE)}"ulib\config\wtl.hpp"\
	{$(INCLUDE)}"ulib\Exception.hpp"\
	{$(INCLUDE)}"ulib\mt\CriticalSection.hpp"\
	{$(INCLUDE)}"ulib\mt\WorkerThread.hpp"\
	{$(INCLUDE)}"ulib\serial\SerialPort.hpp"\
	{$(INCLUDE)}"ulib\stream\ITextStream.hpp"\
	{$(INCLUDE)}"vibrate.h"\
	{$(INCLUDE)}"voicectl.h"\
	{$(INCLUDE)}"winuserm.h"\
	
NODEP_CPP_RECEI=\
	"..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\Recorder.cpp
DEP_CPP_RECOR=\
	".\AboutDlg.h"\
	".\Application.hpp"\
	".\BatteryManager.hpp"\
	".\DisplayOffManager.hpp"\
	".\Receiver.hpp"\
	".\RecorderFrame.h"\
	".\RecorderView.h"\
	".\Settings.hpp"\
	".\stdafx.h"\
	{$(INCLUDE)}"atlapp.h"\
	{$(INCLUDE)}"atlctrls.h"\
	{$(INCLUDE)}"atlctrlw.h"\
	{$(INCLUDE)}"atlddx.h"\
	{$(INCLUDE)}"atldlgs.h"\
	{$(INCLUDE)}"atlframe.h"\
	{$(INCLUDE)}"atlgdi.h"\
	{$(INCLUDE)}"atlmisc.h"\
	{$(INCLUDE)}"atlres.h"\
	{$(INCLUDE)}"atlresce.h"\
	{$(INCLUDE)}"atluser.h"\
	{$(INCLUDE)}"atlwince.h"\
	{$(INCLUDE)}"atlwinx.h"\
	{$(INCLUDE)}"aygshell.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_cc.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_template.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_vw.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\no_tr1\utility.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\bad_weak_ptr.hpp"\
	{$(INCLUDE)}"boost\detail\interlocked.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_cw_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ia64.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_x86.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_nt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_pt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_w32.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_impl.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\function.hpp"\
	{$(INCLUDE)}"boost\function\detail\maybe_include.hpp"\
	{$(INCLUDE)}"boost\function\detail\prologue.hpp"\
	{$(INCLUDE)}"boost\function\function0.hpp"\
	{$(INCLUDE)}"boost\function\function1.hpp"\
	{$(INCLUDE)}"boost\function\function10.hpp"\
	{$(INCLUDE)}"boost\function\function2.hpp"\
	{$(INCLUDE)}"boost\function\function3.hpp"\
	{$(INCLUDE)}"boost\function\function4.hpp"\
	{$(INCLUDE)}"boost\function\function5.hpp"\
	{$(INCLUDE)}"boost\function\function6.hpp"\
	{$(INCLUDE)}"boost\function\function7.hpp"\
	{$(INCLUDE)}"boost\function\function8.hpp"\
	{$(INCLUDE)}"boost\function\function9.hpp"\
	{$(INCLUDE)}"boost\function\function_base.hpp"\
	{$(INCLUDE)}"boost\function\function_template.hpp"\
	{$(INCLUDE)}"boost\function_equal.hpp"\
	{$(INCLUDE)}"boost\get_pointer.hpp"\
	{$(INCLUDE)}"boost\mem_fn.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\adl_barrier.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\adl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\arrays.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ctps.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\gcc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\integral.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\intel.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\nttp_decl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\static_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\yes_no.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_tag.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void_fwd.hpp"\
	{$(INCLUDE)}"boost\non_type.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\dmc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\dmc\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\append.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\dmc\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\transform.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\dmc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\ref.hpp"\
	{$(INCLUDE)}"boost\scoped_ptr.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\composite_traits.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\integral_constant.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_abstract.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_const.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_polymorphic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_volatile.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\typeof.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"boost\utility\addressof.hpp"\
	{$(INCLUDE)}"boost\utility\enable_if.hpp"\
	{$(INCLUDE)}"doclist.h"\
	{$(INCLUDE)}"htmlctrl.h"\
	{$(INCLUDE)}"inkx.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"richink.h"\
	{$(INCLUDE)}"shobjidl.h"\
	{$(INCLUDE)}"shtypes.h"\
	{$(INCLUDE)}"sipapi.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_check_config.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_stlport_version.h"\
	{$(INCLUDE)}"stl\config\_aix.h"\
	{$(INCLUDE)}"stl\config\_apcc.h"\
	{$(INCLUDE)}"stl\config\_apple.h"\
	{$(INCLUDE)}"stl\config\_as400.h"\
	{$(INCLUDE)}"stl\config\_auto_link.h"\
	{$(INCLUDE)}"stl\config\_bc.h"\
	{$(INCLUDE)}"stl\config\_como.h"\
	{$(INCLUDE)}"stl\config\_cygwin.h"\
	{$(INCLUDE)}"stl\config\_dec.h"\
	{$(INCLUDE)}"stl\config\_dec_vms.h"\
	{$(INCLUDE)}"stl\config\_detect_dll_or_lib.h"\
	{$(INCLUDE)}"stl\config\_dm.h"\
	{$(INCLUDE)}"stl\config\_epilog.h"\
	{$(INCLUDE)}"stl\config\_evc.h"\
	{$(INCLUDE)}"stl\config\_freebsd.h"\
	{$(INCLUDE)}"stl\config\_fujitsu.h"\
	{$(INCLUDE)}"stl\config\_gcc.h"\
	{$(INCLUDE)}"stl\config\_hpacc.h"\
	{$(INCLUDE)}"stl\config\_hpux.h"\
	{$(INCLUDE)}"stl\config\_ibm.h"\
	{$(INCLUDE)}"stl\config\_icc.h"\
	{$(INCLUDE)}"stl\config\_intel.h"\
	{$(INCLUDE)}"stl\config\_kai.h"\
	{$(INCLUDE)}"stl\config\_linux.h"\
	{$(INCLUDE)}"stl\config\_mac.h"\
	{$(INCLUDE)}"stl\config\_macosx.h"\
	{$(INCLUDE)}"stl\config\_msvc.h"\
	{$(INCLUDE)}"stl\config\_mwccnlm.h"\
	{$(INCLUDE)}"stl\config\_mwerks.h"\
	{$(INCLUDE)}"stl\config\_native_headers.h"\
	{$(INCLUDE)}"stl\config\_netware.h"\
	{$(INCLUDE)}"stl\config\_openbsd.h"\
	{$(INCLUDE)}"stl\config\_prolog.h"\
	{$(INCLUDE)}"stl\config\_sgi.h"\
	{$(INCLUDE)}"stl\config\_solaris.h"\
	{$(INCLUDE)}"stl\config\_sunprocc.h"\
	{$(INCLUDE)}"stl\config\_symantec.h"\
	{$(INCLUDE)}"stl\config\_system.h"\
	{$(INCLUDE)}"stl\config\_warnings_off.h"\
	{$(INCLUDE)}"stl\config\_watcom.h"\
	{$(INCLUDE)}"stl\config\_windows.h"\
	{$(INCLUDE)}"stl\config\compat.h"\
	{$(INCLUDE)}"stl\config\features.h"\
	{$(INCLUDE)}"stl\config\host.h"\
	{$(INCLUDE)}"stl\config\stl_confix.h"\
	{$(INCLUDE)}"stl\config\stl_mycomp.h"\
	{$(INCLUDE)}"stl\config\user_config.h"\
	{$(INCLUDE)}"tpcshell.h"\
	{$(INCLUDE)}"ulib\config\atl.hpp"\
	{$(INCLUDE)}"ulib\config\config.hpp"\
	{$(INCLUDE)}"ulib\config\workarounds.hpp"\
	{$(INCLUDE)}"ulib\config\wtl.hpp"\
	{$(INCLUDE)}"ulib\datetime\DateTime.hpp"\
	{$(INCLUDE)}"ulib\Exception.hpp"\
	{$(INCLUDE)}"ulib\log\Log.hpp"\
	{$(INCLUDE)}"ulib\log\Logger.hpp"\
	{$(INCLUDE)}"ulib\mt\CriticalSection.hpp"\
	{$(INCLUDE)}"ulib\stream\ITextStream.hpp"\
	{$(INCLUDE)}"ulib\ui\ShellNotifyIcon.hpp"\
	{$(INCLUDE)}"ulib\wince\HardwareKeyManager.hpp"\
	{$(INCLUDE)}"vibrate.h"\
	{$(INCLUDE)}"voicectl.h"\
	{$(INCLUDE)}"winuserm.h"\
	
NODEP_CPP_RECOR=\
	"..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\RecorderFrame.cpp
DEP_CPP_RECORD=\
	".\AboutDlg.h"\
	".\Application.hpp"\
	".\BatteryManager.hpp"\
	".\DisplayOffManager.hpp"\
	".\Receiver.hpp"\
	".\RecorderFrame.h"\
	".\RecorderView.h"\
	".\Settings.hpp"\
	".\stdafx.h"\
	{$(INCLUDE)}"atlapp.h"\
	{$(INCLUDE)}"atlctrls.h"\
	{$(INCLUDE)}"atlctrlw.h"\
	{$(INCLUDE)}"atlddx.h"\
	{$(INCLUDE)}"atldlgs.h"\
	{$(INCLUDE)}"atlframe.h"\
	{$(INCLUDE)}"atlgdi.h"\
	{$(INCLUDE)}"atlmisc.h"\
	{$(INCLUDE)}"atlres.h"\
	{$(INCLUDE)}"atlresce.h"\
	{$(INCLUDE)}"atluser.h"\
	{$(INCLUDE)}"atlwince.h"\
	{$(INCLUDE)}"atlwinx.h"\
	{$(INCLUDE)}"aygshell.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_cc.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_template.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_vw.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\no_tr1\utility.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\bad_weak_ptr.hpp"\
	{$(INCLUDE)}"boost\detail\interlocked.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_cw_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ia64.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_x86.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_nt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_pt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_w32.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_impl.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\function.hpp"\
	{$(INCLUDE)}"boost\function\detail\maybe_include.hpp"\
	{$(INCLUDE)}"boost\function\detail\prologue.hpp"\
	{$(INCLUDE)}"boost\function\function0.hpp"\
	{$(INCLUDE)}"boost\function\function1.hpp"\
	{$(INCLUDE)}"boost\function\function10.hpp"\
	{$(INCLUDE)}"boost\function\function2.hpp"\
	{$(INCLUDE)}"boost\function\function3.hpp"\
	{$(INCLUDE)}"boost\function\function4.hpp"\
	{$(INCLUDE)}"boost\function\function5.hpp"\
	{$(INCLUDE)}"boost\function\function6.hpp"\
	{$(INCLUDE)}"boost\function\function7.hpp"\
	{$(INCLUDE)}"boost\function\function8.hpp"\
	{$(INCLUDE)}"boost\function\function9.hpp"\
	{$(INCLUDE)}"boost\function\function_base.hpp"\
	{$(INCLUDE)}"boost\function\function_template.hpp"\
	{$(INCLUDE)}"boost\function_equal.hpp"\
	{$(INCLUDE)}"boost\get_pointer.hpp"\
	{$(INCLUDE)}"boost\mem_fn.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\adl_barrier.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\adl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\arrays.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ctps.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\gcc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\integral.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\intel.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\nttp_decl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\static_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\yes_no.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_tag.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void_fwd.hpp"\
	{$(INCLUDE)}"boost\non_type.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\dmc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\dmc\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\append.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\dmc\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\transform.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\dmc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\ref.hpp"\
	{$(INCLUDE)}"boost\scoped_ptr.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\composite_traits.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\integral_constant.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_abstract.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_const.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_polymorphic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_volatile.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\typeof.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"boost\utility\addressof.hpp"\
	{$(INCLUDE)}"boost\utility\enable_if.hpp"\
	{$(INCLUDE)}"doclist.h"\
	{$(INCLUDE)}"htmlctrl.h"\
	{$(INCLUDE)}"inkx.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"richink.h"\
	{$(INCLUDE)}"shobjidl.h"\
	{$(INCLUDE)}"shtypes.h"\
	{$(INCLUDE)}"sipapi.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_check_config.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_stlport_version.h"\
	{$(INCLUDE)}"stl\config\_aix.h"\
	{$(INCLUDE)}"stl\config\_apcc.h"\
	{$(INCLUDE)}"stl\config\_apple.h"\
	{$(INCLUDE)}"stl\config\_as400.h"\
	{$(INCLUDE)}"stl\config\_auto_link.h"\
	{$(INCLUDE)}"stl\config\_bc.h"\
	{$(INCLUDE)}"stl\config\_como.h"\
	{$(INCLUDE)}"stl\config\_cygwin.h"\
	{$(INCLUDE)}"stl\config\_dec.h"\
	{$(INCLUDE)}"stl\config\_dec_vms.h"\
	{$(INCLUDE)}"stl\config\_detect_dll_or_lib.h"\
	{$(INCLUDE)}"stl\config\_dm.h"\
	{$(INCLUDE)}"stl\config\_epilog.h"\
	{$(INCLUDE)}"stl\config\_evc.h"\
	{$(INCLUDE)}"stl\config\_freebsd.h"\
	{$(INCLUDE)}"stl\config\_fujitsu.h"\
	{$(INCLUDE)}"stl\config\_gcc.h"\
	{$(INCLUDE)}"stl\config\_hpacc.h"\
	{$(INCLUDE)}"stl\config\_hpux.h"\
	{$(INCLUDE)}"stl\config\_ibm.h"\
	{$(INCLUDE)}"stl\config\_icc.h"\
	{$(INCLUDE)}"stl\config\_intel.h"\
	{$(INCLUDE)}"stl\config\_kai.h"\
	{$(INCLUDE)}"stl\config\_linux.h"\
	{$(INCLUDE)}"stl\config\_mac.h"\
	{$(INCLUDE)}"stl\config\_macosx.h"\
	{$(INCLUDE)}"stl\config\_msvc.h"\
	{$(INCLUDE)}"stl\config\_mwccnlm.h"\
	{$(INCLUDE)}"stl\config\_mwerks.h"\
	{$(INCLUDE)}"stl\config\_native_headers.h"\
	{$(INCLUDE)}"stl\config\_netware.h"\
	{$(INCLUDE)}"stl\config\_openbsd.h"\
	{$(INCLUDE)}"stl\config\_prolog.h"\
	{$(INCLUDE)}"stl\config\_sgi.h"\
	{$(INCLUDE)}"stl\config\_solaris.h"\
	{$(INCLUDE)}"stl\config\_sunprocc.h"\
	{$(INCLUDE)}"stl\config\_symantec.h"\
	{$(INCLUDE)}"stl\config\_system.h"\
	{$(INCLUDE)}"stl\config\_warnings_off.h"\
	{$(INCLUDE)}"stl\config\_watcom.h"\
	{$(INCLUDE)}"stl\config\_windows.h"\
	{$(INCLUDE)}"stl\config\compat.h"\
	{$(INCLUDE)}"stl\config\features.h"\
	{$(INCLUDE)}"stl\config\host.h"\
	{$(INCLUDE)}"stl\config\stl_confix.h"\
	{$(INCLUDE)}"stl\config\stl_mycomp.h"\
	{$(INCLUDE)}"stl\config\user_config.h"\
	{$(INCLUDE)}"tpcshell.h"\
	{$(INCLUDE)}"ulib\config\atl.hpp"\
	{$(INCLUDE)}"ulib\config\config.hpp"\
	{$(INCLUDE)}"ulib\config\workarounds.hpp"\
	{$(INCLUDE)}"ulib\config\wtl.hpp"\
	{$(INCLUDE)}"ulib\datetime\DateTime.hpp"\
	{$(INCLUDE)}"ulib\Exception.hpp"\
	{$(INCLUDE)}"ulib\log\Log.hpp"\
	{$(INCLUDE)}"ulib\log\Logger.hpp"\
	{$(INCLUDE)}"ulib\mt\CriticalSection.hpp"\
	{$(INCLUDE)}"ulib\stream\ITextStream.hpp"\
	{$(INCLUDE)}"ulib\ui\ShellNotifyIcon.hpp"\
	{$(INCLUDE)}"ulib\wince\HardwareKeyManager.hpp"\
	{$(INCLUDE)}"vibrate.h"\
	{$(INCLUDE)}"voicectl.h"\
	{$(INCLUDE)}"winuserm.h"\
	
NODEP_CPP_RECORD=\
	"..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\RecorderView.cpp
DEP_CPP_RECORDE=\
	".\Application.hpp"\
	".\BatteryManager.hpp"\
	".\DisplayOffManager.hpp"\
	".\Receiver.hpp"\
	".\RecorderView.h"\
	".\Settings.hpp"\
	".\stdafx.h"\
	{$(INCLUDE)}"atlapp.h"\
	{$(INCLUDE)}"atlctrls.h"\
	{$(INCLUDE)}"atlctrlw.h"\
	{$(INCLUDE)}"atlddx.h"\
	{$(INCLUDE)}"atldlgs.h"\
	{$(INCLUDE)}"atlframe.h"\
	{$(INCLUDE)}"atlgdi.h"\
	{$(INCLUDE)}"atlmisc.h"\
	{$(INCLUDE)}"atlres.h"\
	{$(INCLUDE)}"atlresce.h"\
	{$(INCLUDE)}"atluser.h"\
	{$(INCLUDE)}"atlwince.h"\
	{$(INCLUDE)}"atlwinx.h"\
	{$(INCLUDE)}"aygshell.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\bind.hpp"\
	{$(INCLUDE)}"boost\bind\arg.hpp"\
	{$(INCLUDE)}"boost\bind\bind_cc.hpp"\
	{$(INCLUDE)}"boost\bind\bind_mf_cc.hpp"\
	{$(INCLUDE)}"boost\bind\bind_template.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_cc.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_template.hpp"\
	{$(INCLUDE)}"boost\bind\mem_fn_vw.hpp"\
	{$(INCLUDE)}"boost\bind\placeholders.hpp"\
	{$(INCLUDE)}"boost\bind\storage.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\no_tr1\utility.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\bad_weak_ptr.hpp"\
	{$(INCLUDE)}"boost\detail\interlocked.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_cw_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ia64.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_x86.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_nt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_pt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_w32.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_impl.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\function.hpp"\
	{$(INCLUDE)}"boost\function\detail\maybe_include.hpp"\
	{$(INCLUDE)}"boost\function\detail\prologue.hpp"\
	{$(INCLUDE)}"boost\function\function0.hpp"\
	{$(INCLUDE)}"boost\function\function1.hpp"\
	{$(INCLUDE)}"boost\function\function10.hpp"\
	{$(INCLUDE)}"boost\function\function2.hpp"\
	{$(INCLUDE)}"boost\function\function3.hpp"\
	{$(INCLUDE)}"boost\function\function4.hpp"\
	{$(INCLUDE)}"boost\function\function5.hpp"\
	{$(INCLUDE)}"boost\function\function6.hpp"\
	{$(INCLUDE)}"boost\function\function7.hpp"\
	{$(INCLUDE)}"boost\function\function8.hpp"\
	{$(INCLUDE)}"boost\function\function9.hpp"\
	{$(INCLUDE)}"boost\function\function_base.hpp"\
	{$(INCLUDE)}"boost\function\function_template.hpp"\
	{$(INCLUDE)}"boost\function_equal.hpp"\
	{$(INCLUDE)}"boost\get_pointer.hpp"\
	{$(INCLUDE)}"boost\mem_fn.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\adl_barrier.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\adl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\arrays.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ctps.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\gcc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\integral.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\intel.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\nttp_decl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\static_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\yes_no.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_tag.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void_fwd.hpp"\
	{$(INCLUDE)}"boost\non_type.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\dmc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\dmc\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\append.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\dmc\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\transform.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\dmc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\ref.hpp"\
	{$(INCLUDE)}"boost\scoped_ptr.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\composite_traits.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\integral_constant.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_abstract.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_const.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_polymorphic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_volatile.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\typeof.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"boost\utility\addressof.hpp"\
	{$(INCLUDE)}"boost\utility\enable_if.hpp"\
	{$(INCLUDE)}"boost\visit_each.hpp"\
	{$(INCLUDE)}"doclist.h"\
	{$(INCLUDE)}"htmlctrl.h"\
	{$(INCLUDE)}"inkx.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"richink.h"\
	{$(INCLUDE)}"shobjidl.h"\
	{$(INCLUDE)}"shtypes.h"\
	{$(INCLUDE)}"sipapi.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_check_config.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_stlport_version.h"\
	{$(INCLUDE)}"stl\config\_aix.h"\
	{$(INCLUDE)}"stl\config\_apcc.h"\
	{$(INCLUDE)}"stl\config\_apple.h"\
	{$(INCLUDE)}"stl\config\_as400.h"\
	{$(INCLUDE)}"stl\config\_auto_link.h"\
	{$(INCLUDE)}"stl\config\_bc.h"\
	{$(INCLUDE)}"stl\config\_como.h"\
	{$(INCLUDE)}"stl\config\_cygwin.h"\
	{$(INCLUDE)}"stl\config\_dec.h"\
	{$(INCLUDE)}"stl\config\_dec_vms.h"\
	{$(INCLUDE)}"stl\config\_detect_dll_or_lib.h"\
	{$(INCLUDE)}"stl\config\_dm.h"\
	{$(INCLUDE)}"stl\config\_epilog.h"\
	{$(INCLUDE)}"stl\config\_evc.h"\
	{$(INCLUDE)}"stl\config\_freebsd.h"\
	{$(INCLUDE)}"stl\config\_fujitsu.h"\
	{$(INCLUDE)}"stl\config\_gcc.h"\
	{$(INCLUDE)}"stl\config\_hpacc.h"\
	{$(INCLUDE)}"stl\config\_hpux.h"\
	{$(INCLUDE)}"stl\config\_ibm.h"\
	{$(INCLUDE)}"stl\config\_icc.h"\
	{$(INCLUDE)}"stl\config\_intel.h"\
	{$(INCLUDE)}"stl\config\_kai.h"\
	{$(INCLUDE)}"stl\config\_linux.h"\
	{$(INCLUDE)}"stl\config\_mac.h"\
	{$(INCLUDE)}"stl\config\_macosx.h"\
	{$(INCLUDE)}"stl\config\_msvc.h"\
	{$(INCLUDE)}"stl\config\_mwccnlm.h"\
	{$(INCLUDE)}"stl\config\_mwerks.h"\
	{$(INCLUDE)}"stl\config\_native_headers.h"\
	{$(INCLUDE)}"stl\config\_netware.h"\
	{$(INCLUDE)}"stl\config\_openbsd.h"\
	{$(INCLUDE)}"stl\config\_prolog.h"\
	{$(INCLUDE)}"stl\config\_sgi.h"\
	{$(INCLUDE)}"stl\config\_solaris.h"\
	{$(INCLUDE)}"stl\config\_sunprocc.h"\
	{$(INCLUDE)}"stl\config\_symantec.h"\
	{$(INCLUDE)}"stl\config\_system.h"\
	{$(INCLUDE)}"stl\config\_warnings_off.h"\
	{$(INCLUDE)}"stl\config\_watcom.h"\
	{$(INCLUDE)}"stl\config\_windows.h"\
	{$(INCLUDE)}"stl\config\compat.h"\
	{$(INCLUDE)}"stl\config\features.h"\
	{$(INCLUDE)}"stl\config\host.h"\
	{$(INCLUDE)}"stl\config\stl_confix.h"\
	{$(INCLUDE)}"stl\config\stl_mycomp.h"\
	{$(INCLUDE)}"stl\config\user_config.h"\
	{$(INCLUDE)}"tpcshell.h"\
	{$(INCLUDE)}"ulib\config\atl.hpp"\
	{$(INCLUDE)}"ulib\config\config.hpp"\
	{$(INCLUDE)}"ulib\config\workarounds.hpp"\
	{$(INCLUDE)}"ulib\config\wtl.hpp"\
	{$(INCLUDE)}"ulib\datetime\DateTime.hpp"\
	{$(INCLUDE)}"ulib\Exception.hpp"\
	{$(INCLUDE)}"ulib\log\Log.hpp"\
	{$(INCLUDE)}"ulib\log\Logger.hpp"\
	{$(INCLUDE)}"ulib\mt\CriticalSection.hpp"\
	{$(INCLUDE)}"ulib\stream\ITextStream.hpp"\
	{$(INCLUDE)}"ulib\wince\HardwareKeyManager.hpp"\
	{$(INCLUDE)}"vibrate.h"\
	{$(INCLUDE)}"voicectl.h"\
	{$(INCLUDE)}"winuserm.h"\
	
NODEP_CPP_RECORDE=\
	"..\..\..\usr\include\pthread.h"\
	
# End Source File
# Begin Source File

SOURCE=.\stdafx.cpp
DEP_CPP_STDAF=\
	".\stdafx.h"\
	{$(INCLUDE)}"atlapp.h"\
	{$(INCLUDE)}"atlctrls.h"\
	{$(INCLUDE)}"atlctrlw.h"\
	{$(INCLUDE)}"atldlgs.h"\
	{$(INCLUDE)}"atlframe.h"\
	{$(INCLUDE)}"atlgdi.h"\
	{$(INCLUDE)}"atlmisc.h"\
	{$(INCLUDE)}"atlres.h"\
	{$(INCLUDE)}"atlresce.h"\
	{$(INCLUDE)}"atluser.h"\
	{$(INCLUDE)}"atlwince.h"\
	{$(INCLUDE)}"atlwinx.h"\
	{$(INCLUDE)}"aygshell.h"\
	{$(INCLUDE)}"boost\assert.hpp"\
	{$(INCLUDE)}"boost\checked_delete.hpp"\
	{$(INCLUDE)}"boost\config.hpp"\
	{$(INCLUDE)}"boost\config\no_tr1\utility.hpp"\
	{$(INCLUDE)}"boost\config\posix_features.hpp"\
	{$(INCLUDE)}"boost\config\select_compiler_config.hpp"\
	{$(INCLUDE)}"boost\config\select_platform_config.hpp"\
	{$(INCLUDE)}"boost\config\select_stdlib_config.hpp"\
	{$(INCLUDE)}"boost\config\suffix.hpp"\
	{$(INCLUDE)}"boost\current_function.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_gcc.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\atomic_count_win32.hpp"\
	{$(INCLUDE)}"boost\detail\bad_weak_ptr.hpp"\
	{$(INCLUDE)}"boost\detail\interlocked.hpp"\
	{$(INCLUDE)}"boost\detail\lightweight_mutex.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_nop.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_pthreads.hpp"\
	{$(INCLUDE)}"boost\detail\lwm_win32_cs.hpp"\
	{$(INCLUDE)}"boost\detail\quick_allocator.hpp"\
	{$(INCLUDE)}"boost\detail\shared_count.hpp"\
	{$(INCLUDE)}"boost\detail\shared_ptr_nmt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_cw_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ia64.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_ppc.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_gcc_x86.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_nt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_pt.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_base_w32.hpp"\
	{$(INCLUDE)}"boost\detail\sp_counted_impl.hpp"\
	{$(INCLUDE)}"boost\detail\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\adl_barrier.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\adl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\arrays.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ctps.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\dtp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\eti.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\gcc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\integral.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\intel.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\lambda.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\msvc.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\nttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\overload_resolution.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\preprocessor.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\static_constant.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\ttp.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\config\workaround.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\integral_wrapper.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_arity_param.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\lambda_support.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\na_spec.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\nttp_decl.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\def_params_tail.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\enum.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\filter_params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\params.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\sub.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\preprocessor\tuple.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\static_cast.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\template_arity_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\value_wknd.hpp"\
	{$(INCLUDE)}"boost\mpl\aux_\yes_no.hpp"\
	{$(INCLUDE)}"boost\mpl\bool.hpp"\
	{$(INCLUDE)}"boost\mpl\bool_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\if.hpp"\
	{$(INCLUDE)}"boost\mpl\int.hpp"\
	{$(INCLUDE)}"boost\mpl\int_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\integral_c_tag.hpp"\
	{$(INCLUDE)}"boost\mpl\lambda_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\limits\arity.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t.hpp"\
	{$(INCLUDE)}"boost\mpl\size_t_fwd.hpp"\
	{$(INCLUDE)}"boost\mpl\void_fwd.hpp"\
	{$(INCLUDE)}"boost\non_type.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\add.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\arithmetic\sub.hpp"\
	{$(INCLUDE)}"boost\preprocessor\cat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\comma_if.hpp"\
	{$(INCLUDE)}"boost\preprocessor\config\config.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\dmc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\edg\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\msvc\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\detail\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\iif.hpp"\
	{$(INCLUDE)}"boost\preprocessor\control\while.hpp"\
	{$(INCLUDE)}"boost\preprocessor\debug\error.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\check.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\dmc\auto_rec.hpp"\
	{$(INCLUDE)}"boost\preprocessor\detail\is_binary.hpp"\
	{$(INCLUDE)}"boost\preprocessor\empty.hpp"\
	{$(INCLUDE)}"boost\preprocessor\enum_params.hpp"\
	{$(INCLUDE)}"boost\preprocessor\identity.hpp"\
	{$(INCLUDE)}"boost\preprocessor\inc.hpp"\
	{$(INCLUDE)}"boost\preprocessor\iterate.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\adt.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\append.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\dmc\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\edg\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\detail\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_left.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\fold_right.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\for_each_i.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\reverse.hpp"\
	{$(INCLUDE)}"boost\preprocessor\list\transform.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\and.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bitand.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\bool.hpp"\
	{$(INCLUDE)}"boost\preprocessor\logical\compl.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repeat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\dmc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\edg\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\detail\msvc\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\repetition\for.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\eat.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\elem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\rem.hpp"\
	{$(INCLUDE)}"boost\preprocessor\tuple\to_list.hpp"\
	{$(INCLUDE)}"boost\shared_ptr.hpp"\
	{$(INCLUDE)}"boost\static_assert.hpp"\
	{$(INCLUDE)}"boost\throw_exception.hpp"\
	{$(INCLUDE)}"boost\type.hpp"\
	{$(INCLUDE)}"boost\type_traits\add_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\alignment_of.hpp"\
	{$(INCLUDE)}"boost\type_traits\broken_compiler_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\config.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\bool_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\cv_traits_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\false_result.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_and.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_eq.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_not.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\ice_or.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_helper.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_function_ptr_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_impl.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\is_mem_fun_pointer_tester.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\size_t_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\template_arity_spec.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_def.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\type_trait_undef.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\wrap.hpp"\
	{$(INCLUDE)}"boost\type_traits\detail\yes_no_type.hpp"\
	{$(INCLUDE)}"boost\type_traits\ice.hpp"\
	{$(INCLUDE)}"boost\type_traits\integral_constant.hpp"\
	{$(INCLUDE)}"boost\type_traits\intrinsics.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_abstract.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_arithmetic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_array.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_class.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_const.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_convertible.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_enum.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_float.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_function.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_integral.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_function_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_member_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pod.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_pointer.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_polymorphic.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_same.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_scalar.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_union.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_void.hpp"\
	{$(INCLUDE)}"boost\type_traits\is_volatile.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\msvc\typeof.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_bounds.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_cv.hpp"\
	{$(INCLUDE)}"boost\type_traits\remove_reference.hpp"\
	{$(INCLUDE)}"boost\type_traits\type_with_alignment.hpp"\
	{$(INCLUDE)}"doclist.h"\
	{$(INCLUDE)}"htmlctrl.h"\
	{$(INCLUDE)}"inkx.h"\
	{$(INCLUDE)}"pthread.h"\
	{$(INCLUDE)}"richink.h"\
	{$(INCLUDE)}"shobjidl.h"\
	{$(INCLUDE)}"shtypes.h"\
	{$(INCLUDE)}"sipapi.h"\
	{$(INCLUDE)}"stl\_abbrevs.h"\
	{$(INCLUDE)}"stl\_check_config.h"\
	{$(INCLUDE)}"stl\_config_compat_post.h"\
	{$(INCLUDE)}"stl\_epilog.h"\
	{$(INCLUDE)}"stl\_prolog.h"\
	{$(INCLUDE)}"stl\_stlport_version.h"\
	{$(INCLUDE)}"stl\config\_aix.h"\
	{$(INCLUDE)}"stl\config\_apcc.h"\
	{$(INCLUDE)}"stl\config\_apple.h"\
	{$(INCLUDE)}"stl\config\_as400.h"\
	{$(INCLUDE)}"stl\config\_auto_link.h"\
	{$(INCLUDE)}"stl\config\_bc.h"\
	{$(INCLUDE)}"stl\config\_como.h"\
	{$(INCLUDE)}"stl\config\_cygwin.h"\
	{$(INCLUDE)}"stl\config\_dec.h"\
	{$(INCLUDE)}"stl\config\_dec_vms.h"\
	{$(INCLUDE)}"stl\config\_detect_dll_or_lib.h"\
	{$(INCLUDE)}"stl\config\_dm.h"\
	{$(INCLUDE)}"stl\config\_epilog.h"\
	{$(INCLUDE)}"stl\config\_evc.h"\
	{$(INCLUDE)}"stl\config\_freebsd.h"\
	{$(INCLUDE)}"stl\config\_fujitsu.h"\
	{$(INCLUDE)}"stl\config\_gcc.h"\
	{$(INCLUDE)}"stl\config\_hpacc.h"\
	{$(INCLUDE)}"stl\config\_hpux.h"\
	{$(INCLUDE)}"stl\config\_ibm.h"\
	{$(INCLUDE)}"stl\config\_icc.h"\
	{$(INCLUDE)}"stl\config\_intel.h"\
	{$(INCLUDE)}"stl\config\_kai.h"\
	{$(INCLUDE)}"stl\config\_linux.h"\
	{$(INCLUDE)}"stl\config\_mac.h"\
	{$(INCLUDE)}"stl\config\_macosx.h"\
	{$(INCLUDE)}"stl\config\_msvc.h"\
	{$(INCLUDE)}"stl\config\_mwccnlm.h"\
	{$(INCLUDE)}"stl\config\_mwerks.h"\
	{$(INCLUDE)}"stl\config\_native_headers.h"\
	{$(INCLUDE)}"stl\config\_netware.h"\
	{$(INCLUDE)}"stl\config\_openbsd.h"\
	{$(INCLUDE)}"stl\config\_prolog.h"\
	{$(INCLUDE)}"stl\config\_sgi.h"\
	{$(INCLUDE)}"stl\config\_solaris.h"\
	{$(INCLUDE)}"stl\config\_sunprocc.h"\
	{$(INCLUDE)}"stl\config\_symantec.h"\
	{$(INCLUDE)}"stl\config\_system.h"\
	{$(INCLUDE)}"stl\config\_warnings_off.h"\
	{$(INCLUDE)}"stl\config\_watcom.h"\
	{$(INCLUDE)}"stl\config\_windows.h"\
	{$(INCLUDE)}"stl\config\compat.h"\
	{$(INCLUDE)}"stl\config\features.h"\
	{$(INCLUDE)}"stl\config\host.h"\
	{$(INCLUDE)}"stl\config\stl_confix.h"\
	{$(INCLUDE)}"stl\config\stl_mycomp.h"\
	{$(INCLUDE)}"stl\config\user_config.h"\
	{$(INCLUDE)}"tpcshell.h"\
	{$(INCLUDE)}"ulib\config\atl.hpp"\
	{$(INCLUDE)}"ulib\config\config.hpp"\
	{$(INCLUDE)}"ulib\config\workarounds.hpp"\
	{$(INCLUDE)}"ulib\config\wtl.hpp"\
	{$(INCLUDE)}"ulib\Exception.hpp"\
	{$(INCLUDE)}"vibrate.h"\
	{$(INCLUDE)}"voicectl.h"\
	{$(INCLUDE)}"winuserm.h"\
	
NODEP_CPP_STDAF=\
	"..\..\..\usr\include\pthread.h"\
	
# ADD CPP /Yc"stdafx.h"
# End Source File
# End Group
# Begin Group "Header Files"

# PROP Default_Filter "h;hpp;hxx;hm;inl"
# Begin Source File

SOURCE=.\AboutDlg.h
# End Source File
# Begin Source File

SOURCE=.\Application.hpp
# End Source File
# Begin Source File

SOURCE=.\BacklightManager.hpp
# End Source File
# Begin Source File

SOURCE=.\BatteryManager.hpp
# End Source File
# Begin Source File

SOURCE=.\DisplayOffManager.hpp
# End Source File
# Begin Source File

SOURCE=.\Receiver.hpp
# End Source File
# Begin Source File

SOURCE=.\RecorderFrame.h
# End Source File
# Begin Source File

SOURCE=.\RecorderView.h
# End Source File
# Begin Source File

SOURCE=.\Settings.hpp
# End Source File
# Begin Source File

SOURCE=.\stdafx.h
# End Source File
# End Group
# Begin Group "Resource Files"

# PROP Default_Filter "ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe"
# Begin Source File

SOURCE=.\res\Recorder.ico
# End Source File
# Begin Source File

SOURCE=.\resourceppc.h
# End Source File
# Begin Source File

SOURCE=.\res\toolbar.bmp
# End Source File
# End Group
# End Target
# End Project

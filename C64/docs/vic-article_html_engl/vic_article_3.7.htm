<html>

<head>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <title>vic article 3.7. - 3.7.3.</title>
 <style type="text/css">
  <!--
   a:link {text-decoration: none }
   a:active {text-decoration: none }
   a:visited {text-decoration: none }
   a:hover {color:#d66418;}
  -->
 </style>
</head>

<body bgcolor="#000000" text="#D69418" link="#D64818" vlink="#D64818" alink="#D66418">

<div align="center"><center>
<table border="0" cellpadding="0" cellspacing="0" width="600">
    <tr>
        <td width="100%"><hr color="#D69418">
        <div align="center"><center><table border="0"
        cellpadding="0" cellspacing="0" width="100%">
            <tr>
                <td valign="top"><a name="3.7."><font size="4"><strong>3.7.
                TEXT-/BITMAP DISPLAY</strong></font></a></td>
                <td align="right" valign="top"><a
                href="vic_article_3.htm"><img
                src="linkarrow_up.gif" alt="[up]" border="0"
                width="15" height="15"></a></td>
            </tr>
        </table>
        </center></div><div align="center"><center><table
        border="0" cellpadding="0" cellspacing="0" width="100%">
            <tr>
                <td valign="top"><a name="3.7.1."><font size="3"><strong>3.7.1.
                IDLE STATE/DISPLAY STATE</strong></font></a></td>
                <td align="right" valign="top"><a href="#3.7."><img
                src="linkarrow_up.gif" alt="[up]" border="0"
                width="15" height="15"></a></td>
            </tr>
        </table>
        </center></div><p>The text/bitmap display logic in the
        VIC is in one of two states at any time: The idle state
        and the display state.</p>
        <ul>
            <li>In display state, c- and g-accesses take place,
                the addresses and interpretation of the data
                depend on the selected display mode.</li>
        </ul>
        <ul>
            <li>In idle state, only g-accesses occur. The access
                is always to address $3fff ($39ff when the ECM
                bit in register $d016 is set). The graphics are
                displayed by the sequencer exactly as in display
                state, but with the video matrix data treated as
                &quot;0&quot; bits.</li>
        </ul>
        <p>The transition from idle to display state occurs as
        soon as there is a Bad Line Condition (see section <a
        href="vic_article_3.4.htm#3.5.">3.5.</a>). The transition
        from display to idle state occurs in cycle 58 of a line
        if the RC (see next section) contains the value 7 and
        there is no Bad Line Condition.</p>
        <p>As long as register $d011 is not modified in the
        middle of a frame, the display logic is in display state
        within the display window and in idle state outside of
        it. If you set a YSCROLL other than 3 in a 25 line
        display window and store a value not equal to zero in
        $3fff you can see the stripes generated by the sequencer
        in idle state on the upper or lower side of the window.</p>
        <p>In <a href="vic_article_appendix.htm#a">[4]</a>, idle
        accesses as well as g-accesses in idle state are called
        &quot;idle bus cycle&quot;. But the two phenomena are not
        the same. The accesses marked with &quot;+&quot; in the
        diagrams of <a href="vic_article_appendix.htm#a">[4]</a>
        are normal g-accesses. In this article, the term
        &quot;idle access&quot; is only used for the accesses
        marked with &quot;i&quot; in the diagrams in section <a
        href="vic_article_3.6.htm#3.6.3.">3.6.3.</a>, and not for
        the g-accesses during idle state.</p>
        <div align="center"><center><table border="0"
        cellpadding="0" cellspacing="0" width="100%">
            <tr>
                <td valign="top"><a name="3.7.2."><font size="3"><strong>3.7.2.
                VC AND RC</strong></font></a></td>
                <td align="right" valign="top"><a href="#3.7."><img
                src="linkarrow_up.gif" alt="[up]" border="0"
                width="15" height="15"></a></td>
            </tr>
        </table>
        </center></div><p>Probably the most important result of
        the VIC examinations is the discovery of the function of
        the internal registers &quot;VC&quot; and &quot;RC&quot;
        of the VIC. They are used to generate the addresses for
        accessing the video matrix and the character
        generator/bitmap.</p>
        <p>Strictly speaking there are three registers:</p>
        <ul>
            <li>&quot;VC&quot; (video counter) is a 10 bit
                counter that can be loaded with the value from
                VCBASE.</li>
            <li>&quot;VCBASE&quot; (video counter base) is a 10
                bit data register with reset input that can be
                loaded with the value from VC.</li>
            <li>&quot;RC&quot; (row counter) is a 3 bit counter
                with reset input.</li>
        </ul>
        <p>Besides this, there is a 6 bit counter with reset
        input that keeps track of the position within the
        internal 40×12 bit video matrix/color line where read
        character pointers are stored resp. read again. I will
        call this &quot;VMLI&quot; (video matrix line index)
        here.</p>
        <p>There four registers behave according to the following
        rules:</p>
        <ol>
            <li>Once somewhere outside of the range of raster
                lines $30-$f7 (i.e. outside of the Bad Line
                range), VCBASE is reset to zero. This is
                presumably done in raster line 0, the exact
                moment cannot be determined and is irrelevant.</li>
            <li>In the first phase of cycle 14 of each line, VC
                is loaded from VCBASE (VCBASE-&gt;VC) and VMLI is
                cleared. If there is a Bad Line Condition in this
                phase, RC is also reset to zero. </li>
            <li>If there is a Bad Line Condition in cycles 12-54,
                BA is set low and the c-accesses are started.
                Once started, one c-access is done in the second
                phase of every clock cycle in the range 15-54.
                The read data is stored in the video matrix/color
                line at the position specified by VMLI. These
                data is internally read from the position
                specified by VMLI as well on each g-access in
                display state.</li>
            <li>VC and VMLI are incremented after each g-access
                in display state.</li>
            <li>In the first phase of cycle 58, the VIC checks if
                RC=7. If so, the video logic goes to idle state
                and VCBASE is loaded from VC (VC-&gt;VCBASE). If
                the video logic is in display state afterwards
                (this is always the case if there is a Bad Line
                Condition), RC is incremented. </li>
        </ol>
        <p>These rules normally see that VC counts all 1000
        addresses of the video matrix within the display frame
        and that RC counts the 8 pixel lines of each text line.
        The behavior of VC and RC is largely determined by Bad
        Line Conditions which you can control with the processor
        via YSCROLL, giving you control of the VC and RC within
        certain limits.</p>
        <div align="center"><center><table border="0"
        cellpadding="0" cellspacing="0" width="100%">
            <tr>
                <td valign="top"><a name="3.7.3."><font size="3"><strong>3.7.3.
                GRAPHICS MODES</strong></font></a></td>
                <td align="right" valign="top"><a href="#3.7."><img
                src="linkarrow_up.gif" alt="[up]" border="0"
                width="15" height="15"></a></td>
            </tr>
        </table>
        </center></div><p>The graphics data sequencer is capable
        of 8 different graphics modes that are selected by the
        bits ECM, BMM and MCM (Extended Color Mode, Bit Map Mode
        and Multi Color Mode) in the registers $d011 and $d016
        (of the 8 possible bit combinations, 3 are
        &quot;invalid&quot; and generate the same output, the
        color black). The idle state is a bit special in that no
        c-accesses occur in it and the sequencer uses
        &quot;0&quot; bits for the video matrix data.</p>
        <p>The sequencer outputs the graphics data in every
        raster line in the area of the display column as long as
        the vertical border flip-flop is reset (see section <a
        href="vic_article_3.9.htm">3.9.</a>). Outside of the
        display column and if the flip-flop is set, the last
        current background color is displayed (this area is
        normally covered by the border). The heart of the
        sequencer is an 8 bit shift register that is shifted by 1
        bit every pixel and reloaded with new graphics data after
        every g-access. With XSCROLL from register $d016 the
        reloading can be delayed by 0-7 pixels, thus shifting the
        display up to 7 pixels to the right.</p>
        <p>The address generator for the text/bitmap accesses (c-
        and g-accesses) has basically 3 modes for the g-accesses
        (the c-accesses always follow the same address scheme).
        In display state, the BMM bit selects either character
        generator accesses (BMM=0) or bitmap accesses (BMM=1). In
        idle state, the g-accesses are always done at video
        address $3fff. If the ECM bit is set, the address
        generator always holds the address lines 9 and 10 low
        without any other changes to the addressing scheme (e.g.
        the g-accesses in idle state then occur at address
        $39ff).</p>
        <p>The 8 graphics modes are now covered separately and
        the generated addresses and the interpretation of the
        read data on c- and g-accesses is described. This is
        followed by a description of the pecularities of the idle
        state. For easy reference, the addresses are always given
        explicitly for every mode although e.g. the c-accesses
        are always the same.</p>
        <hr color="#D69418">
        </td>
    </tr>
</table>
</center></div><div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="600">
    <tr>
        <td valign="top" width="50%"><a
        href="vic_article_3.6.htm"><img src="linkarrow_left.gif"
        alt="[previous]" border="0" width="15" height="15"></a></td>
        <td align="right" valign="top" width="50%"><a
        href="vic_article_3.7.3.htm"><img
        src="linkarrow_right.gif" alt="[next]" border="0"
        width="15" height="15"></a></td>
    </tr>
</table>
</center></div>
</body>
</html>
